server:
  port: 8080

spring:
  main:
    web-application-type: reactive
  application:
    name: api-gateway
  cloud:
    gateway:
      routes:
        - id: restaurant-service
          uri: lb://RESTAURANT-SERVICE
          predicates:
            - Path=/api/restaurants/**
          filters:
            - RoleBasedAuthorization
        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/api/orders/**
          filters:
            - RoleBasedAuthorization
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/users/**,/api/admins/**,/api/addresses/**,/api/auth/**
          filters:
            - RoleBasedAuthorization
        - id: delivery-service
          uri: lb://DELIVERY-SERVICE
          predicates:
            - Path=/api/delivery-person/**
          filters:
            - RoleBasedAuthorization

  profiles:
    active: default
jwt:
  secret: 3e7cbe8aebe67cf7c758b216ea0dd42edc43c1befc1d36f72cd6bc5f29d8567c8bf85972b636c3275b27e80940eb9d67cb61ea00bd8f07a62f62b7c0aeef4ca5

gateway:
  authorized-endpoints:
    - path: /api/admins/**
      roles: [ "ADMIN" ]
    - path: /api/auth/**
      roles: [ "ANY" ]
    - path: /api/users/**
      roles: [ "ADMIN","CUSTOMER" ]
    - path: /api/addresses/**
      roles: [ "ADMIN","CUSTOMER" ]
    - path: /api/restaurants/**
      roles: [ "OWNER", "ADMIN" ]
    - path: /api/orders/**
      roles: [ "USER", "ADMIN" ]
    - path: /api/delivery-person/**
      roles: [ "DELIVERY_PERSON","ADMIN" ]


eureka:
  instance:
    prefer-ip-address: true
    hostname: localhost
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka/

